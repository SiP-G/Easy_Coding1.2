<resources>
    <string name="app_name">Easy Coding</string>
    <string name="navigation_drawer_open">Open navigation drawer</string>
    <string name="navigation_drawer_close">Close navigation drawer</string>
    <string name="nav_header_title">Easy Coding</string>
    <string name="nav_header_desc">Navigation header</string>
    <string name="action_settings">Settings</string>

    <string name="prog">Языки Программирования</string>
    <string name="dost">Достижения</string>
    <string name="dop">Дополнительно</string>
    <string name="prog_1">C++ широко используется для разработки программного обеспечения, являясь
        из самых популярных языков программирования. Область его применения
        включает создание операционных систем, разнообразных прикладных программ, драйверов устройств,
        приложений для встраиваемых систем, высокопроизводительных серверов, а также игр. Существует
        множество реализаций языка C++, как бесплатных, так и коммерческих и для различных платформ.
        Например, на платформе x86 это GCC, Visual C++, Intel C++ Compiler, Embarcadero (Borland) C++ Builder и другие.
    C++ оказал огромное влияние на другие языки программирования, в первую очередь на Java и C#.

Синтаксис C++ унаследован от языка C. Одним из принципов разработки было сохранение совместимости с C.
        Тем не менее C++ не является в строгом смысле надмножеством C; множество программ, которые могут
        одинаково успешно транслироваться как компиляторами C, так и компиляторами C++, довольно велико,
        но не включает все возможные программы на C.</string>
    <string name="prog_2">Python является мультипарадигмальным языком программирования, поддерживающим императивное, процедурное,
        структурное, объектно-ориентированное программирование[18], метапрограммирование[22] и функциональное программирование[18].
        Задачи обобщённого программирования решаются за счёт динамической типизации[23][24]. Аспектно-ориентированное программирование
        частично поддерживается через декораторы[25], более полноценная поддержка обеспечивается дополнительными фреймворками[26]. Такие
        методики как контрактное и логическое программирование можно реализовать с помощью библиотек или расширений[27]. Основные
        архитектурные черты — динамическая типизация, автоматическое управление памятью[18], полная интроспекция, механизм обработки
        исключений, поддержка многопоточных вычислений с глобальной блокировкой интерпретатора (GIL)[28], высокоуровневые структуры
        данных. Поддерживается разбиение программ на модули, которые, в свою очередь, могут объединяться в пакеты[29].
        Эталонной реализацией Python является интерпретатор CPython, поддерживающий большинство активно используемых платформ[30] и
        являющийся стандартом де-факто языка[31]. Он распространяется под свободной лицензией Python Software Foundation License,
        позволяющей использовать его без ограничений в любых приложениях, включая проприетарные[32]. CPython компилирует исходные
        тексты в высокоуровневый байт-код, который исполняется в стековой виртуальной машине[33]. К другим трём основным
        реализациям языка относятся Jython (для JVM), IronPython (для CLR/.NET) и PyPy[18][34]. PyPy написан на подмножестве
        языка Python (RPython) и разрабатывался как альтернатива CPython с целью повышения скорости исполнения программ, в том
        числе за счёт использования JIT-компиляции[34]. Поддержка версии Python 2 закончилась в 2020 году[35]. На текущий момент
        активно развивается версия языка Python 3[36]. Разработка языка ведётся через предложения по расширению языка PEP (англ.
        Python Enhancement Proposal), в которых описываются нововведения, делаются корректировки согласно обратной связи от
        сообщества и документируются итоговые решения[37].
        Стандартная библиотека включает большой набор полезных переносимых функций, начиная от функционала для работы с текстом и
        заканчивая средствами для написания сетевых приложений. Дополнительные возможности, такие как математическое моделирование,
        работа с оборудованием, написание веб-приложений или разработка игр, могут реализовываться посредством обширного количества
        сторонних библиотек, а также интеграцией библиотек, написанных на Си или C++, при этом и сам интерпретатор Python может
        интегрироваться в проекты, написанные на этих языках[18]. Существует и специализированный репозиторий программного обеспечения,
        написанного на Python, — PyPI[38]. Данный репозиторий предоставляет средства для простой установки пакетов в операционную систему
        и стал стандартом де-факто для Python[39]. По состоянию на 2019 год в нём содержалось более 175 тысяч пакетов[38].</string>
    <string name="dost_1">Достижение не получено</string>
    <string name="dost_2">Достижения не получено</string>
    <string name="button_start">Start</string>

</resources>